$(document).ready(function(){
    
    // If the placeholder id does not exist, no chart to display
    if ($("#placeholder").length == 0)
        return;

    load_data();

}); // end document ready

var sensortime;
var bigData;

/**
 * Load data for charts
 */

function take_bite(bitedate)
{
    // Get a date if set
    var $date = $("#date").val();
    var $datestart = $("#datestart").val();
    var $dateend = $("#dateend").val();

    var d1 = new Date(bitedate);
    var d2 = new Date($datestart);
    var d3 = new Date($dateend);    
    if (d2.getTime() > d3.getTime()){
        d3 = new Date($datestart);
        d2 = new Date($dateend);
    }

    var dayskip = 5;

    var d4 = new Date(bitedate);
    d4.setDate(d4.getDate() + dayskip - 1);
    if (d4.getTime() > d3.getTime())
        d4.setDate(d3.getDate());

    var biteend = (d4.getMonth() + 1) + "/" + d4.getDate() + "/" + d4.getFullYear();

    // send to server, handle json response
    $url = base_url + 'index.php/main/getdata/' + column_name;
    $.post($url, {datestart: bitedate, dateend: biteend}, function(data) {
        var allData = jQuery.parseJSON(data);
        if (d1.getTime() === d2.getTime())
            bigData = allData;
        else
            bigData.phaze = allData.phaze.concat(bigData.phaze);


        if (d3.getTime() >= d3.getTime()) {
            var timedone = new Date();
            timedone = timedone.getTime();
            timestart = sensortime.getTime();
            $("#dataloadtime").html("DataReader Request Complete " + (timedone - timestart) / 1000 + " seconds.");
            initial_plot_data();
        }
        else {
            var dayLength = 24 * 60 * 60 * 1000;
            var pct = Math.floor(100 * (d4.getTime() + dayLength - d2.getTime()) / (d3.getTime() - d2.getTime() + dayLength));

            d1.setDate(d1.getDate() + dayskip);
            var dststring = (d1.getMonth() + 1) + "/" + d1.getDate() + "/" + d1.getFullYear();
            $("#dataloadtime").html(pct + "%pct complete ");
            take_bite(dststring);
        }
    });
}


function load_data()
{
    // Get a date if set
    var $date      = $("#date").val();
    var $datestart = $("#datestart").val();
    var $dateend   = $("#dateend").val();

    $("#dataloadtime").html("DataReader Request Pending...");
    sensortime = new Date();
    bigData = [];

    var d2 = new Date($datestart);
    var d3 = new Date($dateend);
    if (d2.getTime() > d3.getTime())
        take_bite($dateend);
    else
        take_bite($datestart);
}

function initial_plot_data()
{
    // Get a date if set
    var $date      = $("#date").val();
    var $datestart = $("#datestart").val();
    var $dateend   = $("#dateend").val();

    sensortime = new Date();

    var a = bigData.phaze;
    var scale = bigData.scale;

    var aa = [];
    var bb = [];
    var cc = [];
    var dd = [];
    var ee = [];
    var ff = [];

    var t;
    var dq;

    for (x in a) {
        myMsg = x;
        t = (a[x].timestamp).split(/[- :]/);
        dq = Date.UTC(t[0], t[1]-1, t[2], t[3], t[4], t[5]);
        if (a[x].phase == 1 || a[x].phase == 'A')
            aa.push([dq, a[x].data*scale]);
        if (a[x].phase == 2 || a[x].phase == 'B')
            bb.push([dq, a[x].data*scale]);
        if (a[x].phase == 3 || a[x].phase == 'C')
            cc.push([dq, a[x].data*scale]);
        if (a[x].phase == 4)
            dd.push([dq, a[x].data*scale]);
        if (a[x].phase == 5)
            ee.push([dq, a[x].data*scale]);
        if (a[x].phase == 6)
            ff.push([dq, a[x].data*scale]);
    }

    var numSensors = (dd.length > 0 || ee.length > 0 || ff.length > 0) ? 6 : 3;

    var options = {
        legend: {show: true, noColumns: 6, container: '#legendcontainer'},
        series: {
            lines: {show: true},
            points: {show: false},
            downsample: {threshold: 1000}
        },
        yaxis: {ticks: 10, color: "#000000"},
        xaxis: {mode: "time", timeformat: "%0m/%0d %H:%M:%S", color: "#000000"},
        selection: {mode: "xy"}
    };

    var plot;
    if (sensor_type == 'Feeder') {
        if (numSensors == 3) {
            plot = $.plot($("#placeholder"), [
                {label: "Phase 1", data: aa, color: 2},
                {label: "Phase 2", data: bb, color: "#0033FF"},
                {label: "Phase 3", data: cc, color: 3}
            ], options);
        }
        else {
            plot = $.plot($("#placeholder"), [
                {label: "Phase 1", data: aa, color: 2},
                {label: "Phase 2", data: bb, color: "#0033FF"},
                {label: "Phase 3", data: cc, color: 3},
                {label: "Phase 4", data: dd, color: 4},
                {label: "Phase 5", data: ee, color: 5},
                {label: "Phase 6", data: ff, color: 6} 
            ], options);
        }
    }
    else if (sensor_type == 'Transformer') {
        plot = $.plot($("#placeholder"), [
                {label: "Phase A", data: aa, color: 2},
                {label: "Phase B", data: bb, color: "#0033FF"},
                {label: "Phase C", data: cc, color: 3}
            ], options);
    }

    var overview;
    if (sensor_type == 'Feeder') {
        if (numSensors== 3) {
            overview = $.plot($("#overview"), [
                {label: "Phase 1", data: aa, color: 2},
                {label: "Phase 2", data: bb, color: "#0033FF"},
                {label: "Phase 3", data: cc, color: 3}
                ], {
                    legend: {show: false},
                    series: {
                        lines: {show: true, lineWidth: 1},
                        shadowSize: 0,
                        downsample: {threshold: 1000}
                    },
                    xaxis: {mode: "time", timeformat: "%m/%d %H:%M", color: "#000000"},
                    yaxis: {ticks: 3, color: "#000000"},
                    grid: {color: "#999"},
                    selection: {mode: "xy"}
            });
        }
        else {
            overview = $.plot($("#overview"), [
                {label: "Phase 1", data: aa, color: 2},
                {label: "Phase 2", data: bb, color: "#0033FF"},
                {label: "Phase 3", data: cc, color: 3},
                {label: "Phase 4", data: dd, color: 4},
                {label: "Phase 5", data: ee, color: 5},
                {label: "Phase 6", data: ff, color: 6}
                ], {
                    legend: {show: false},
                    series: {
                        lines: {show: true, lineWidth: 1},
                        shadowSize: 0,
                        downsample: {threshold: 1000}
                    },
                    xaxis: {mode: "time", timeformat: "%m/%d %H:%M", color: "#000000"},
                    yaxis: {ticks: 3, color: "#000000"},
                    grid: {color: "#999"},
                    selection: {mode: "xy"}
            });
        }
    }
    else if (sensor_type == 'Transformer') {
        overview = $.plot($("#overview"), [
                {label: "Phase A", data: aa, color: 2},
                {label: "Phase B", data: bb, color: "#0033FF"},
                {label: "Phase C", data: cc, color: 3}
                ], {
                    legend: {show: false},
                    series: {
                        lines: {show: true, lineWidth: 1},
                        shadowSize: 0,
                        downsample: {threshold: 1000}
                    },
                    xaxis: {mode: "time", timeformat: "%m/%d %H:%M", color: "#000000"},
                    yaxis: {ticks: 3, color: "#000000"},
                    grid: {color: "#999"},
                    selection: {mode: "xy"}
            });
    }
    $("#placeholder").bind("plotselected", function(event, ranges) {
        if (ranges.xaxis.to - ranges.xaxis.from < 60000)
            ranges.xaxis.to = ranges.xaxis.from + 60000;
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001)
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        plot = $.plot($("#placeholder"), getData((ranges.xaxis.from - 60000), (ranges.xaxis.to + 60000), aa, bb, cc, dd, ee, ff),
            $.extend(true, {}, options, {
                xaxis: {min: ranges.xaxis.from, max: ranges.xaxis.to},
                yaxis: {min: ranges.yaxis.from, max: ranges.yaxis.to}
            }));
        overview.setSelection(ranges, true);        
    });

    $("#overview").bind("plotselected", function(event, ranges) {
            if (Math.abs(ranges.xaxis.to - ranges.xaxis.from) < 60000)  
                return;            
            plot = $.plot($("#placeholder"), getData((ranges.xaxis.from - 60000), (ranges.xaxis.to + 60000), aa, bb, cc, dd, ee, ff),
                $.extend(true, {}, options, {
                    xaxis: {min: ranges.xaxis.from, max: ranges.xaxis.to},
                    yaxis: {min: ranges.yaxis.from, max: ranges.yaxis.to}
                }));
        });


    $("#placeholder").dblclick(function () {
        if (sensor_type == 'Feeder') {
            if (numSensors == 6){
                plot = $.plot( $("#placeholder"), [
                        {label: "Phase 1", data: aa, color: 2},
                        {label: "Phase 2", data: bb, color: "#0033FF"},
                        {label: "Phase 3", data: cc, color: 3},
                        {label: "Phase 4", data: dd, color: 4},
                        {label: "Phase 5", data: ee, color: 5},
                        {label: "Phase 6", data: ff, color: 6}
                    ], options );
            }
            else {
                plot = $.plot( $("#placeholder"), [
                    {label: "Phase 1", data: aa, color: 2},
                    {label: "Phase 2", data: bb, color: "#0033FF"},
                    {label: "Phase 3", data: cc, color: 3}
                ], options );
            }
            if (numSensors == 6){
                overview = $.plot($("#overview"), [
                    {label: "Phase 1", data: aa, color: 2},
                    {label: "Phase 2", data: bb, color: "#0033FF"},
                    {label: "Phase 3", data: cc, color: 3},
                    {label: "Phase 4", data: dd, color: 4},
                    {label: "Phase 5", data: ee, color: 5},
                    {label: "Phase 6", data: ff, color: 6}
                ], {
                    legend: {show: false},
                    series: {
                        lines: {show: true, lineWidth: 1},
                        shadowSize: 0,
                        downsample: { threshold: 1000 }
                    },
                    xaxis: {mode: "time", timeformat: "%0m/%0d %H:%M", color: "#000000"},
                    yaxis: {ticks: 3, color: "#000000"},
                    grid: {color: "#999"},
                    selection: {mode: "xy"}
                });
            }
            else{
                overview = $.plot($("#overview"), [
                    {label: "Phase 1", data: aa, color: 2},
                    {label: "Phase 2", data: bb, color: "#0033FF"},
                    {label: "Phase 3", data: cc, color: 3}
                ], {
                    legend: {show: false},
                    series: {
                        lines: {show: true, lineWidth: 1},
                        shadowSize: 0,
                        downsample: { threshold: 1000 }
                    },
                    xaxis: {mode: "time", timeformat: "%m/%d %H:%M", color: "#000000"},
                    yaxis: {ticks: 3, color: "#000000"},
                    grid: {color: "#999"},
                    selection: {mode: "xy"}
                });
            }
        }
        else if (sensor_type == 'Transformer') {
            plot = $.plot( $("#placeholder"), [
                    {label: "Phase A", data: aa, color: 2},
                    {label: "Phase B", data: bb, color: "#0033FF"},
                    {label: "Phase C", data: cc, color: 3}
                ], options );
            overview = $.plot($("#overview"), [
                    {label: "Phase A", data: aa, color: 2},
                    {label: "Phase B", data: bb, color: "#0033FF"},
                    {label: "Phase C", data: cc, color: 3}
                ], {
                    legend: {show: false},
                    series: {
                        lines: {show: true, lineWidth: 1},
                        shadowSize: 0,
                        downsample: { threshold: 1000 }
                    },
                    xaxis: {mode: "time", timeformat: "%m/%d %H:%M", color: "#000000"},
                    yaxis: {ticks: 3, color: "#000000"},
                    grid: {color: "#999"},
                    selection: {mode: "xy"}
                });
        }
    });

        // Append message if there is no data to display
        if ( aa.length == 0 && bb.length == 0 && cc.length == 0 && dd.length == 0 && ee.length == 0 && ff.length == 0)
            $("#placeholder").append(
            '<div class="notice" style="text-align: center; position: relative; left: 10px; top: -200px;"> \n\
            No DataReader Available for Specified Time Period! \n\
            </div>'
            );
}

/**
 * Select range for zooming
 */
function getData(x1, x2, aa, bb, cc, dd, ee, ff) {

    var aaa = [];
    var bbb = [];
    var ccc = [];
    var ddd = []
    var eee = []
    var fff = []
    var t;

    for (x in aa) {
        t = new Date(aa[x][0]).getTime();
        if (t > x1 && t < x2)
            aaa.push(aa[x])
    }
    for (x in bb) {
        t = new Date(bb[x][0]).getTime();
        if (t > x1 && t < x2)
            bbb.push(bb[x])
    }
    for (x in cc) {
        t = new Date(cc[x][0]).getTime();
        if (t > x1 && t < x2)
            ccc.push(cc[x])
    }
    for (x in dd) {
        t = new Date(dd[x][0]).getTime();
        if (t > x1 && t < x2)
            ddd.push(dd[x])
    }
    for (x in ee) {
        t = new Date(ee[x][0]).getTime();
        if (t > x1 && t < x2)
            eee.push(ee[x])
    }
    for (x in ff) {
        t = new Date(ff[x][0]).getTime();
        if (t > x1 && t < x2)
            fff.push(ff[x])
    }
    var numSensors = (dd.length > 0 || ee.length > 0 || ff.length > 0) ? 6 : 3;
    if (numSensors == 6)
        return [
            {label: "Phase 1", data: aaa, color: 2},
            {label: "Phase 2", data: bbb, color: "#0033FF"},
            {label: "Phase 3", data: ccc, color: 3},
            {label: "Phase 4", data: ddd, color: 4},
            {label: "Phase 5", data: eee, color: 5},
            {label: "Phase 6", data: fff, color: 6}
        ];
    else {
        if (sensor_type == 'Feeder') 
            return [
                {label: "Phase 1", data: aaa, color: 2},
                {label: "Phase 2", data: bbb, color: "#0033FF"},
                {label: "Phase 3", data: ccc, color: 3}
            ];
        else if (sensor_type == 'Transformer') {
            return [
                {label: "Phase A", data: aaa, color: 2},
                {label: "Phase B", data: bbb, color: "#0033FF"},
                {label: "Phase C", data: ccc, color: 3}
            ];
        }
    }    
}