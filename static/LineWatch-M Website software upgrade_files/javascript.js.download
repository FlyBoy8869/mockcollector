$(document).ready(function() {
    // Default to auto-update
    if ($("#autoupdate").length != 0) {
        $("#progress").width(75);
        auto_update();
    }
    /**
     * Auto Update clicks
     */
    $("#autoupdate").click(function() {
        if (this.checked) {
            $("#progress").width(75);
            auto_update();
        } else {
            auto = false;
            $("#progress").width(0);
        }
    });

    var radioMode = $('input:radio[name=mode]:checked').val();
    if (radioMode == 'CELL-M' || radioMode == 'CELL-R') {
        $("#resetCellModem").removeClass("hidden");
    } else {
        $("#resetCellModem").addClass("hidden");
    }

    $("body").delegate('input:radio[name=mode]', 'click', function() {
        var radioMode = $('input:radio[name=mode]:checked').val();
        set_comm_display(radioMode);
    });
    /**
     * Handle ajax links
     */
    $("body").delegate(".ajax", "click", function(event) {

        // Stop default operation
        //event.preventDefault();

        // Form the link to be used...
        $url = $(this).attr('href');

        // Fadeout main div
        $("#maindiv").fadeOut('fast', function() {
            // Animation complete
            // Send to server, handle xml response    
            $.post($url,
                function(xml) {
                    // Set info content to the server response
                    var msgs = $("data", xml).html();
                    $("#maindiv").html(msgs);

                    // fadein
                    $("#maindiv").fadeIn('slow');

                    // stop spinner

                }); // end fade out callback

        }); // end fade out

        // Start a spinner somewhere

    }); // end ajax links


    /**
     * Handle date pickers
     */
    if ($("#date").length != 0) {
        $("#date").datepicker({
            onClose: function(dateText, inst) {
                if ($("#date").attr("name") == "sensors_date")
                    getSensorData();
                else if ($("#date").attr("name") == "viewdata_date")
                    load_data();
                else if ($("#date").attr("name") == "quality_date") {
                    getQualityData();
                }
            }
        });

    }
    if ($("#datestart").length != 0) {
        $("#datestart").datepicker();
    }
    if ($("#dateend").length != 0) {
        $("#dateend").datepicker();
    }

    /*
     * Load new date range on viewdata page
     */
    $("#updatePlot").click(function() {
        load_data();
    });

    /**
     * handle time
     */
    $("#time").focusout(function() {
        if ($("#time").attr("name") == "sensors_time")
            getSensorData();
        else if ($("#time").attr("name") == "quality_time") {
            getQualityData();
        }
    });


    /**
     * Handle the select all checkbox on the download page
     */
    $("#selectall").click(function() {
        if (this.checked) {
            // Check all other boxes
            $('input:checkbox').attr('checked', true);
        } else {
            // Uncheck all other boxes
            $('input:checkbox').attr('checked', false);
        }

    });

    /**
     * EMALS ETC style form highlighting
     *
     */
    // $("body").delegate(".tcell input", "change", function() {
        // $(this).css('background-color', 'yellow');
    // });
    // $("body").delegate("form input", "change", function() {
        // $(this).css('background-color', 'yellow');
    // });



    $("body").delegate("#config", "click", function(event) {

        // Prevent page refresh
        event.preventDefault();

        // Challenge with password
        $("#configbuttons").hide();
        $("#password").show("fast");
    });

    /**
     * Handle save config button clicks
     * 
     */
    $("body").delegate("#saveconfig", "click", function(event) {

        // Prevent page refresh
        event.preventDefault();

        // Init variables specific to a meter
        var StationName = "";
        var TimeUpdateInterval = 0;
        var single_phase = false;
		var frequency = $("input[name=frequency]:checked").val();

        // Gather up data
        var config = [];
        var names = [];
        $(".tcell input:text").each(function(index) {
            if (this.name != 'StationName' && this.name != 'TimeUpdateInterval' && this.name != 'frequency') {
                config.push(this.value);
                names.push(this.name);
            }
        });
        var password = $("input:password").val();

        var reset = $("#reset");
        if (reset.is(":checked"))
            reset = true;
        else
            reset = false;

        var rf_channel = $("select").val();
		
        // Populate Feeder Specific Values 
        if (sensor_type == 'Feeder') {
            single_phase = $("#singlephase");

            if (single_phase.is(":checked"))
                single_phase = true;
            else
                single_phase = false;
        }
        // Populate Transformer Specific Values
        else if (sensor_type == 'Transformer') {
            StationName = $("input:text[name=StationName]").val();
            TimeUpdateInterval = $("input:text[name=TimeUpdateInterval]").val();
        }

        $.post(this.href, {
                params: config,
                columnnames: names,
                password: password,
                reset: reset,
                single_phase: single_phase,
                rf_channel: rf_channel,
                StationName: StationName,
			    TimeUpdateInterval: TimeUpdateInterval, 
				frequency: frequency
            },
            function(xml) {
                $("#maindiv").html(getXmlTag("data", xml));
            });

    });

    /**
     * Handle save communications button clicks
     * 
     */
    $("body").delegate("#saveComms", "click", function(event) {
        // prevent page refresh
        event.preventDefault();

		//create object of form elements to be included in post
		//format as needed
		var postVarObj = {};
		var elem = document.getElementById('changesForm').elements;
		for(var i = 0; i < elem.length; i++)
		{
			if (elem[i].type == "checkbox") { //checkboxes need special format. 0=unchecked,1=checked
				if (elem[i].checked == true) { postVarObj[elem[i].name] = 1; } 
				else { postVarObj[elem[i].name] = 0; }
			} else if (elem[i].name == "mode") { //radio of "mode" needs special handling to only post selected
				if (elem[i].checked == true) { postVarObj["mode"] = elem[i].value; }
			} else {
				postVarObj[elem[i].name] = elem[i].value;
		  }
		}
        
        $.post(this.href, 
			postVarObj,
			function(xml) {
				$("#maindiv").html(getXmlTag("data", xml));
			});

        var radioMode = $('input:radio[name=mode]:checked').val();
        if (radioMode == 'CELL-M' || radioMode == 'CELL-R')
            $("#resetCellModem").removeClass("hidden");
    });


    /**
     * Handle power quality data fetch
     */
    function getQualityData() {
        // get data from date and time input
        var date = $("#date").val();
        var time = $("#time").val();

        // Store radio button setting
        var radio = $(":checked").val();

        var timestamp = (date + " " + time);
        $.post("powerquality", { timestamp: timestamp }, function(xml) {
            // on reply
            $("#data").html(getXmlTag("data", xml));
            $("#time").val(getXmlTag("time", xml));

        });
        load_quality_data();
    }

    function set_comm_display(radioMode) {
        if (radioMode == 'CELL-M' || radioMode == 'CELL-R') {
            $("#resetCellModem").fadeIn();
        } else {
            $("#resetCellModem").fadeOut();
        }
    }

}); // end document ready

//console.log(dnp3PointsOnLoad); //debug

var auto = true; // Detect autoupdate
var waiting = false; // Flag indicating if an AJAX request has not seen a reply yet.

function auto_update() {
    $("input#autoupdate:checked").each(function() {
        if (!waiting) {
            auto = true;
            getSensorData();
            setTimeout("auto_update()", 5000);
            $("#progress").animate({ width: 0 }, 5000, function() {
                if (auto == true)
                    $("#progress").width(75);
            });
        }

    });
}

/**
 * Handle sensor data report data fetch
 */
function getSensorData() {
    // get data from date and time input
    var date = $("#date").val();
    var time = $("#time").val();

    waiting = true;

    var timestamp = (date + " " + time);

    $.post(base_url + "index.php/main/sensordata", { timestamp: timestamp, auto: auto }, function(xml) {
        // on reply
        $("#data").html(getXmlTag("data", xml));
        $("#time").val(getXmlTag("time", xml));
        $("#lastA").html(getXmlTag("lastA", xml));
        $("#lastB").html(getXmlTag("lastB", xml));
        $("#lastC").html(getXmlTag("lastC", xml));
        if ((sensor_type == 'Feeder')  && ($( "#lastD" ).length)) {
            $("#lastD").html(getXmlTag("lastD", xml));
            $("#lastE").html(getXmlTag("lastE", xml));
            $("#lastF").html(getXmlTag("lastF", xml));
        }

        waiting = false;
    });

} // end getSensorData

/**
 * Wrote this kludge of an xml parser to account for IE8 being the runt of all 
 * browsers.
 */
function getXmlTag(tag, xml) {
    reply = $(tag, xml).html();

    if (reply == null) // Internet Explorer :(
    {
        xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
        xmlDoc.async = "false";
        xmlDoc.loadXML(xml);
        iereply = xmlDoc.getElementsByTagName(tag)[0].text;
        return iereply;
    } else // Everybody else...
    {
        parser = new DOMParser();
        xmlDoc = parser.parseFromString(xml, "text/xml");
        nodes = xmlDoc.getElementsByTagName(tag);
        reply = nodes[0].textContent;
        return reply;
    }
} // end getxmltag
